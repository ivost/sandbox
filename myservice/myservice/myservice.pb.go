// Code generated by protoc-gen-go. DO NOT EDIT.
// source: myservice/myservice.proto

package myservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthResponse struct {
	Status               string   `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	Time                 string   `protobuf:"bytes,20,opt,name=time,proto3" json:"time,omitempty"`
	Name                 string   `protobuf:"bytes,30,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,40,opt,name=address,proto3" json:"address,omitempty"`
	Version              string   `protobuf:"bytes,50,opt,name=version,proto3" json:"version,omitempty"`
	Build                string   `protobuf:"bytes,60,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8751446c2eb315c8, []int{0}
}

func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *HealthResponse) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *HealthResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HealthResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *HealthResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *HealthResponse) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func init() {
	proto.RegisterType((*HealthResponse)(nil), "myservice.HealthResponse")
}

func init() { proto.RegisterFile("myservice/myservice.proto", fileDescriptor_8751446c2eb315c8) }

var fileDescriptor_8751446c2eb315c8 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x45, 0xa9, 0xe8, 0x94, 0x79, 0x0b, 0x85, 0x47, 0x29, 0xe9, 0x28, 0x22, 0x5d, 0x75, 0x95,
	0x40, 0xdd, 0xba, 0x15, 0x5c, 0xe8, 0xa6, 0xae, 0x5c, 0x66, 0x9c, 0x67, 0x1b, 0x98, 0x49, 0x86,
	0x79, 0x99, 0xc2, 0x6c, 0xfd, 0x05, 0x77, 0xfe, 0x96, 0xbf, 0xe0, 0x87, 0x48, 0x92, 0x69, 0xa5,
	0xbb, 0x7b, 0xcf, 0x4d, 0x20, 0x27, 0xb0, 0x68, 0x06, 0xa6, 0x6e, 0x6f, 0xde, 0x49, 0x1d, 0x93,
	0x6c, 0x3b, 0xe7, 0x1d, 0xe6, 0x47, 0x50, 0xdc, 0x6c, 0x9d, 0xdb, 0xd6, 0xa4, 0x74, 0x6b, 0x94,
	0xb6, 0xd6, 0x79, 0xed, 0x8d, 0xb3, 0x9c, 0x0e, 0x16, 0xd7, 0xe3, 0x1a, 0x5b, 0xd9, 0x7f, 0x28,
	0x6a, 0x5a, 0x3f, 0xa4, 0x71, 0xf9, 0x3d, 0x81, 0xcb, 0x27, 0xd2, 0xb5, 0xdf, 0x6d, 0x88, 0x5b,
	0x67, 0x99, 0x70, 0x0e, 0x19, 0x7b, 0xed, 0x7b, 0x16, 0x70, 0x37, 0x59, 0xe5, 0x9b, 0xb1, 0x21,
	0xc2, 0xb9, 0x37, 0x0d, 0x89, 0x59, 0xa4, 0x31, 0x07, 0x66, 0x75, 0x43, 0xe2, 0x36, 0xb1, 0x90,
	0x51, 0xc0, 0x54, 0x57, 0x55, 0x47, 0xcc, 0x62, 0x15, 0xf1, 0xa1, 0x86, 0x65, 0x4f, 0x1d, 0x1b,
	0x67, 0xc5, 0x3a, 0x2d, 0x63, 0xc5, 0x19, 0x5c, 0x94, 0xbd, 0xa9, 0x2b, 0xf1, 0x10, 0x79, 0x2a,
	0xeb, 0x37, 0xc8, 0x5f, 0x86, 0xd7, 0x24, 0x89, 0xcf, 0x90, 0xa5, 0x87, 0xe2, 0x5c, 0x26, 0x23,
	0x79, 0x30, 0x92, 0x8f, 0xc1, 0xa8, 0x58, 0xc8, 0xff, 0x3f, 0x3a, 0x75, 0x5a, 0x5e, 0x7d, 0xfe,
	0xfc, 0x7e, 0x9d, 0xe5, 0x38, 0x55, 0xbb, 0x38, 0x94, 0x59, 0xbc, 0x7b, 0xff, 0x17, 0x00, 0x00,
	0xff, 0xff, 0x35, 0x68, 0xda, 0x5a, 0x61, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MyServiceClient is the client API for MyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyServiceClient interface {
	Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthResponse, error)
}

type myServiceClient struct {
	cc *grpc.ClientConn
}

func NewMyServiceClient(cc *grpc.ClientConn) MyServiceClient {
	return &myServiceClient{cc}
}

func (c *myServiceClient) Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/myservice.MyService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyServiceServer is the server API for MyService service.
type MyServiceServer interface {
	Health(context.Context, *empty.Empty) (*HealthResponse, error)
}

// UnimplementedMyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMyServiceServer struct {
}

func (*UnimplementedMyServiceServer) Health(ctx context.Context, req *empty.Empty) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}

func RegisterMyServiceServer(s *grpc.Server, srv MyServiceServer) {
	s.RegisterService(&_MyService_serviceDesc, srv)
}

func _MyService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/myservice.MyService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyServiceServer).Health(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "myservice.MyService",
	HandlerType: (*MyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _MyService_Health_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "myservice/myservice.proto",
}
